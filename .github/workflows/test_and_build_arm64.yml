name: test_and_build_arm64

on:
  pull_request:
  push:
    branches: [master]

jobs:
  test_and_build_arm64:
    strategy:
      matrix:
        os: [ubuntu-latest]
        pyver: [ cp38-cp38 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
      python-version: ${{ matrix.pyver }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            python -m pip install --upgrade pip && \
            pip install pipenv && \
            pipenv run pip install -r core-requirements.txt && \
            export COGNITE_API_KEY=NGM0MmZiNzItNTZjOC00MTNmLWFiZjgtZGIyOWY4NDdjZDgy && \
            export COGNITE_CLIENT_NAME=python-sdk-integration-tests && \
            export COGNITE_BASE_URL=https://greenfield.cognitedata.com && \
            export COGNITE_PROJECT=python-sdk-test && \
            pipenv sync --dev && \
            pipenv run coverage run --source cognite.client -m pytest -v tests --reruns 2 && \
            pipenv run coverage xml && \
            pipenv run black -l 120 --check . && \
            pipenv run python setup.py sdist && \
            pipenv run python setup.py bdist_wheel && \
            pipenv run python setup-core.py sdist && \
            pipenv run python setup-core.py bdist_wheel && \
            cd docs && pipenv run make html && \
            deactivate'
